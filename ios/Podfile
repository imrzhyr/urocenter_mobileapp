# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Add FIB Payments SDK source
source 'https://github.com/First-Iraqi-Bank/fib-ios-sdk.git'
source 'https://cdn.cocoapods.org/'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Fix for firebase modular headers issue with Firebase Auth
  $static_framework = ['firebase_auth', 'firebase_core']
  pre_install do |installer|
    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
    installer.pod_targets.each do |pod|
      if $static_framework.include?(pod.name)
        def pod.build_type;
          Pod::BuildType.static_framework
        end
      end
    end
  end
  
  # FIB Payment SDK
  pod 'FIBPaymentSDK', '~> 1.1.1'
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Fix for Firebase modular headers issue
    target.build_configurations.each do |config|
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Update deployment target for compatibility with newer Firebase versions
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Disable bitcode as it's no longer maintained by Apple
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Remove macOS and Mac Catalyst architectures to speed up builds
      config.build_settings['EXCLUDED_ARCHS[sdk=macosx*]'] = 'arm64 x86_64'
      config.build_settings['SUPPORTED_PLATFORMS'] = 'iphoneos iphonesimulator'

      # --- Add Permission Handler Macros ---
      # Ensures native code for specific permissions is compiled.
      # See: https://pub.dev/packages/permission_handler#ios
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',

        # Permissions needed for UroCenter
        'PERMISSION_CAMERA=1',
        'PERMISSION_MICROPHONE=1',
        'PERMISSION_PHOTOS=1',
        # 'PERMISSION_NOTIFICATIONS=1', # Uncomment if you plan to use notifications

        # Other potential permissions (can be left commented or set to 0 if unused)
        # 'PERMISSION_EVENTS=0',
        # 'PERMISSION_EVENTS_FULL_ACCESS=0',
        # 'PERMISSION_REMINDERS=0',
        # 'PERMISSION_CONTACTS=0',
        # 'PERMISSION_SPEECH_RECOGNIZER=0',
        # 'PERMISSION_LOCATION=0', # Use LOCATION_WHENINUSE if applicable
        # 'PERMISSION_LOCATION_WHENINUSE=0',
        # 'PERMISSION_MEDIA_LIBRARY=0', # Corresponds to NSAppleMusicUsageDescription
        # 'PERMISSION_SENSORS=0',
        # 'PERMISSION_BLUETOOTH=0',
        # 'PERMISSION_APP_TRACKING_TRANSPARENCY=0',
        # 'PERMISSION_CRITICAL_ALERTS=0',
        # 'PERMISSION_ASSISTANT=0',
      ]
      # --- End Permission Handler Macros ---
    end
  end
end
